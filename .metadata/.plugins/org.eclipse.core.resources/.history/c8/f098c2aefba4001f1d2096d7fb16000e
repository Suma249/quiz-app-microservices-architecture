package com.learning.quiz_service.service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;

import com.learning.quiz_service.entity.*;
import com.learning.quiz_service.feign.QuizInterfaceFeign;
import com.learning.quiz_service.repo.QuizRepo;

import lombok.AllArgsConstructor;
import lombok.NoArgsConstructor;

@Service
@AllArgsConstructor
@NoArgsConstructor
public class QuizService {

	@Autowired
	private QuizRepo quizRepo;
	
	@Autowired
	private QuizInterfaceFeign feign;


	public ResponseEntity<String> createQuiz(String category,int i, String quizTitle) {
		List<Integer> questions=feign.getQuestionsForQuiz(category, i).getBody();
		QuizEntity quiz=new QuizEntity();
		quiz.setTitle(quizTitle);
		quiz.setQuestions(questions);
		quizRepo.save(quiz);
		return new ResponseEntity<>("success", HttpStatus.CREATED);
	}

	public ResponseEntity<List<QuestionWrapper>> getQuizQuestions(Integer id) {
		// TODO Auto-generated method stub
		List<QuestionWrapper> questionsForUser=new ArrayList<>();
		/*Optional<QuizEntity> quiz= quizRepo.findById(id);
		List<QuestionEntity> questionFromDB=quiz.get().getQuestions();
		
		for(QuestionEntity q: questionFromDB) {
			QuestionWrapper qw=new QuestionWrapper(q.getId(), q.getQuestionTitle(), q.getOption1(), q.getOption2(), q.getOption3());
			questionsForUser.add(qw);
		}*/
		return new ResponseEntity<>(questionsForUser, HttpStatus.OK);
	}

	public ResponseEntity<Integer> calculateResult(Integer id, List<Response> response) {
		QuizEntity quiz=quizRepo.findById(id).get();
		//List<QuestionEntity> questions=quiz.getQuestions();
		int right=0;
		/*int questionInd=0;
		for(Response res: response) {
			if(res.getResponse().equals(questions.get(questionInd).getRightAns()))
				right++;
			questionInd++;
		}*/
		return new ResponseEntity<>(right, HttpStatus.OK);
	}
	
	
}
